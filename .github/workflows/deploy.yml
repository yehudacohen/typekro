name: Deploy TypeKro Documentation & Package

on:
  push:
    branches: [ master ]
    paths: [ 'docs/**', '.github/workflows/**' ]
    tags: [ 'v*' ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write  
  id-token: write

jobs:
  # Run tests and upload coverage
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        
      - name: Install dependencies
        run: bun install
        
      - name: Run tests with coverage
        run: bun test --coverage --coverage-reporter=lcov --timeout 10000 $(find test -name '*.test.ts' | grep -v integration)
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # Build docs on master changes
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        
      - name: Install dependencies
        run: bun install
        
      - name: Build documentation
        run: bun run docs:build
        
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist
  
  # Deploy docs to GitHub Pages
  deploy-docs:
    needs: build-docs
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Publish to npm only on version tags
  publish-npm:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        
      - name: Install dependencies
        run: bun install
        
      - name: Build library
        run: bun run build
        
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Update package.json version
        run: |
          bun --bun run -e "
          const pkg = require('./package.json');
          pkg.version = '${{ steps.version.outputs.VERSION }}';
          require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
          "
          
      - name: Setup Node.js for npm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title "TypeKro v${{ steps.version.outputs.VERSION }}" \
            --generate-notes \
            --verify-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}